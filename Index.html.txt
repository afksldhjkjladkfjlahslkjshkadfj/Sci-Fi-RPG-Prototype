<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Sci-Fi RPG Prototype</title>
  <style>
    body {
      margin: 0;
      background-color: black;
      overflow: hidden;
    }
    canvas {
      display: block;
      margin: 0 auto;
      background-color: #111;
      image-rendering: pixelated;
    }
  </style>
</head>
<body>
  <canvas id="game" width="640" height="480"></canvas>
  <script>
    const canvas = document.getElementById("game");
    const ctx = canvas.getContext("2d");

    const tileSize = 32;
    const mapRows = 15;
    const mapCols = 20;

    const player = {
      x: 2,
      y: 2,
      color: "lime"
    };

    const npc = {
      x: 10,
      y: 7,
      color: "cyan",
      message: "Welcome to Orion Station."
    };

    const map = [
      // 0 = walkable, 1 = wall
      [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
      [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
      [1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,0,1],
      [1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1],
      [1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1],
      [1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1],
      [1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1],
      [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
      [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    ];

    function drawMap() {
      for (let row = 0; row < map.length; row++) {
        for (let col = 0; col < map[row].length; col++) {
          ctx.fillStyle = map[row][col] === 1 ? "#333" : "#222";
          ctx.fillRect(col * tileSize, row * tileSize, tileSize, tileSize);
        }
      }
    }

    function drawEntity(entity) {
      ctx.fillStyle = entity.color;
      ctx.fillRect(entity.x * tileSize, entity.y * tileSize, tileSize, tileSize);
    }

    function drawDialogue(text) {
      ctx.fillStyle = "rgba(0,0,0,0.7)";
      ctx.fillRect(0, canvas.height - 60, canvas.width, 60);
      ctx.fillStyle = "white";
      ctx.font = "16px monospace";
      ctx.fillText(text, 10, canvas.height - 30);
    }

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawMap();
      drawEntity(npc);
      drawEntity(player);

      if (player.x === npc.x && player.y === npc.y - 1) {
        drawDialogue(npc.message);
      }
    }

    function movePlayer(dx, dy) {
      const newX = player.x + dx;
      const newY = player.y + dy;
      if (map[newY] && map[newY][newX] === 0) {
        player.x = newX;
        player.y = newY;
      }
      draw();
    }

    document.addEventListener("keydown", (e) => {
      switch (e.key) {
        case "ArrowUp": case "w": movePlayer(0, -1); break;
        case "ArrowDown": case "s": movePlayer(0, 1); break;
        case "ArrowLeft": case "a": movePlayer(-1, 0); break;
        case "ArrowRight": case "d": movePlayer(1, 0); break;
      }
    });

    draw();
  </script>
</body>
</html>
